#cloud-config

apt_update: true
apt_upgrade: true

users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    home: /home/ubuntu
    shell: /bin/bash

packages:
  - python3-pip
  - python3-dev
  - build-essential
  - tmux
  - apt-transport-https 
  - ca-certificates 
  - curl 
  - software-properties-common

byobu_default: system

runcmd:
  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nAdding docker repository ...\n"
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  - chmod a+r /etc/apt/keyrings/docker.asc
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update -y

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nInstalling dependencies ...\n"
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  
  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nInitializing docker swarm ...\n"
  - docker swarm init > /dev/null

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nObtain swarm tokens ...\n"
  - docker swarm join-token worker -q > /swarm-worker-token.txt
  - docker swarm join-token manager -q > /swarm-manager-token.txt

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nStarting a local registry ...\n"  
  - docker service create --name registry --publish published=5000,target=5000 registry:2

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nCloning core repository ...\n"
  - git clone https://github.com/UniversityCourseWork/UU-DEII-Project.git /project

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "Pushing images to registery ...\n"
  - docker compose -f /project/compose.yaml pull
  - docker compose -f /project/compose.yaml build
  - docker compose -f /project/compose.yaml push

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "Installing dependencies for manager ...\n"
  - pip3 install -r /project/unittester/manager/requirements.txt

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "Start control application ...\n"
  - tmux new-session -d -s managerService
  - tmux send-keys -t managerService "python3 /project/unittester/manager/manager.py --host=0.0.0.0 --port=5200 --debug" C-m
  - tmux detach -s managerService

  - printf "..."
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n=========================================================================================================\n"
  - printf "\n\nDeploy the application stack on swarm ...\n"
  - docker stack deploy --compose-file /project/compose.yaml unittester --detach=true
