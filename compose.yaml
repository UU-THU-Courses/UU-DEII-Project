services:
  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  pulsar:
    hostname: pulsar
    image: apachepulsar/pulsar:3.2.1
    ports:
      - "8080:8080"
      - "6650:6650"
    networks:
      - frontend
      - backend
    volumes:
      - pulsardata:/pulsar/data
    command: bin/pulsar standalone
    deploy:
      replicas: 0
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  mongo:
    hostname: mongo
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=custom_admin
      - MONGO_INITDB_ROOT_PASSWORD=custom_passw
    networks:
      - frontend
      - backend
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  mongo-express:
    image: mongo-express:latest
    restart: always
    depends_on:
      - mongo
    environment:
      - VCAP_APP_HOST=0.0.0.0
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=custom_admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=custom_passw
      - ME_CONFIG_BASICAUTH_USERNAME=custom_admin
      - ME_CONFIG_BASICAUTH_PASSWORD=custom_passw
    networks:
      - frontend
    ports:
      - "8081:8081"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  webui:
    image: 127.0.0.1:5000/webui
    build: ./unittester/webui
    ports:
      - "5100:5100"
    networks:
      - frontend
    depends_on:
      - mongo
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  webcrawler:
    image: 127.0.0.1:5000/webcrawler
    build: ./unittester/webcrawler
    environment:
      REPLICA: "{{.Task.Slot}}"
      MAX_REPLICA: 4
    networks:
      - frontend
    depends_on:
      - rabbit
    volumes:
      - /crawlerdata:/crawlerdata
    deploy:
      replicas: 4
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"

  worker:
    image: 127.0.0.1:5000/worker
    build: ./unittester/worker
    networks:
      - backend
    depends_on:
      - rabbit
      - mongo
    deploy:
      replicas: 0
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
        max_replicas_per_node: 16

networks:
  frontend:
  backend:

volumes:
  pulsardata:
  mongodata:
